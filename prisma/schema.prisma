// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//npx prisma generate
//npx prisma migrate dev --name xxx

generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

enum MemorizeStatus {
  UNKNOWN
  NOT_MEMORIZED
  MEMORIZED
  MEMORIZED2
  PERFECTLY_MEMORIZED
}

model User {
  id                        Int                         @id @default(autoincrement())
  name                      String?
  email                     String                      @unique
  password                  String
  birthday                  DateTime?
  profile                   String?
  googleId                  String?                     @unique
  currentChallengeThemeId   Int?
  currentChallengeTheme     Theme?                      @relation(fields: [currentChallengeThemeId], references: [id])
  UserWordList              UserWordList[]
  WordListUserStatus        WordListUserStatus[]
  WordStoryByGPT            WordStoryByGPT[]
  passwordResetTokens       PasswordResetToken[]
}

model PasswordResetToken {
  id         Int      @id @default(autoincrement())
  userId     Int
  token      String   @unique
  expires    DateTime
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Theme {
  id      Int    @id @default(autoincrement())
  name    String
  imageFilename     String?
  activeStatus String?
  displayOrder Int?
  blocks  Block[]
  users   User[]
}

model Block {
  id        Int         @id @default(autoincrement())
  name      String
  themeId   Int
  displayOrder Int?
  theme     Theme       @relation(fields: [themeId], references: [id])
  wordLists WordListBlock[]
  WordStoryByGPT            WordStoryByGPT[]
}

model WordList {
  id              Int              @id @default(autoincrement())
  english         String
  japanese        String
  exampleSentenceE String?
  exampleSentenceJ String?
  synonyms        String?
  imageFilename   String?
  usage           String?
  remark          String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
  blocks          WordListBlock[]
  WordListUserStatus WordListUserStatus[]
}

model WordListBlock {
  wordListId  Int
  blockId     Int
  wordList    WordList  @relation(fields: [wordListId], references: [id], onDelete: Cascade)
  block       Block     @relation(fields: [blockId], references: [id])

  @@id([wordListId, blockId])
}



model UserWordList {
  id              Int            @id @default(autoincrement())
  userId          Int
  english         String
  japanese        String
  exampleSentence String?
  imageFilename   String?
  remark          String?
  memorizeStatus  MemorizeStatus @default(UNKNOWN)
  lastCheckDate   DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @default(now()) @updatedAt
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WordListUserStatus {
  id                Int             @id @default(autoincrement())
  userId            Int
  wordListId        Int
  memorizeStatusEJ  MemorizeStatus  @default(NOT_MEMORIZED)
  memorizeStatusJE  MemorizeStatus  @default(NOT_MEMORIZED)
  exampleSentence   String?
  imageFilename             String?
  lastCheckDate     DateTime?
  lastMemorizedDateEJ     DateTime?
  lastMemorizedDateJE     DateTime?
  updatedAt         DateTime        @default(now()) @updatedAt
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  wordList   WordList @relation(fields: [wordListId], references: [id], onDelete: Cascade)

  @@unique([userId, wordListId])
}


model WordStoryByGPT {
  id            Int      @id @default(autoincrement())
  userId        Int
  blockId       Int
  storyTitle    String
  storyContent  String
  lengthCategory        String
  genre         String
  characters  String
  words         String[] // Prismaでは配列をサポートしています
  imageFilename      String?   // AWSのパスを格納
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  block         Block    @relation(fields: [blockId], references: [id])
  createdAt     DateTime @default(now())
}

